name 'camera_firewire'

enable_corba

using_library "opencv"
using_library "camera_firewire"
using_library "camera_interface"
using_task_library "canserial"
using_task_library "can"
import_types_from "base"

task_context 'CameraTask' do
    needs_configuration
   
    output_port 'frame', 'base::samples::frame::Frame'

    
    property('camera_id', 'string','105984').
    	doc 'unique camerea id'
    property('width', 'int',640).
    	doc 'width of the frame'
    property('height', 'int',480).
    	doc 'height of the frame'
    
end

task_context 'CameraViewerTask' do
#   needs_configuration
    input_port 'frame', ro_ptr('base::samples::frame::Frame')
end

deployment "camera_firewire_test" do

    left_cam = task('camera_firewire_left', 'camera_firewire::CameraTask').
       periodic 0.016
    left_cam.camera_id = "2892819639939303"

    right_cam = task('camera_firewire_right', 'camera_firewire::CameraTask').
        periodic 0.016
    right_cam.camera_id = "2892819639939304"

    add_default_logger

    if !corba_enabled?
       browse left_cam
       browse right_cam
    end
end


deployment "camera_test" do

    can     = task('can', "can::Task").
        periodic(0.001).
        realtime.
        priority(85)

    canserial = task("canserial", "canserial::Task").
        sequential

    camera_task = task("camera", 'CameraTask').
        periodic(0.016)
    #camera_viewer_task = task("camera_viewer", 'CameraViewerTask').
    #    periodic(0.03)

    add_default_logger
    if !corba_enabled?
        browse camera_task
        browse camera_viewer_task
    end
end

